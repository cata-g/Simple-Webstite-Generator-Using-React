{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\website_generator\\\\frontend\\\\src\\\\components\\\\Creator.jsx\";\nimport React, { Component, useState } from \"react\";\nimport Components from \"./Components\";\nimport Visual from \"./Visual\";\nimport \"./Creator.css\";\nimport HierarchyComponent from \"./HierarchyComponent\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = [{\n  name: \"Name1\",\n  content: \"adsdasjdasdkahdjasjdhakdahd\"\n}, {\n  name: \"Name2\",\n  content: \"hdfhfghfg\"\n}, {\n  name: \"Name3\",\n  content: \"cvxcvxcvxcv\"\n}, {\n  name: \"Name4\",\n  content: \"324234235332\"\n}, {\n  name: \"Name5\",\n  content: \"oiiewroioweruiow\"\n}];\nconst getItems = count => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k}`,\n  content: `item ${k}`\n}));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\nconst grid = 8;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\nclass Creator extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = result => {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n      const items = reorder(this.state.items, result.source.index, result.destination.index);\n      this.setState({\n        items\n      });\n    };\n    //[hierarchyComponents, setHierarchyComponents] = useState([]);\n    this.handleAddInHierarchy = component => {\n      let comp = {\n        id: hierarchyComponents.length,\n        name: component.name + hierarchyComponents.length,\n        content: component.content\n      };\n      const updateComps = [...hierarchyComponents, comp];\n      setHierarchyComponents(updateComps);\n    };\n    this.handleRemoveFromHierarchy = name => {\n      const updateComps = [...hierarchyComponents].filter(comp => comp.name !== name);\n      setHierarchyComponents(updateComps);\n    };\n    this.state = {\n      items: getItems(10)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"components\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), buttons.map((btn, i) => /*#__PURE__*/_jsxDEV(Components, {\n          id: i,\n          name: btn.name,\n          content: btn.content,\n          handleAdd: () => handleAddInHierarchy(btn)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hierarchy\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hierarchy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this),\n        /*#__PURE__*/\n        /* {hierarchyComponents.map((btn, i) => (\r\n        <HierarchyComponent\r\n        id={i}\r\n        name={btn.name}\r\n        content={btn.content}\r\n        handleDelete={() => handleRemoveFromHierarchy(btn.name)}\r\n        />\r\n        ))} */\n        _jsxDEV(DragDropContext, {\n          onDragEnd: this.onDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              style: getListStyle(snapshot.isDraggingOver),\n              children: [this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item.id,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                  children: item.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 27\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualisation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Visual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), hierarchyComponents.map((btn, i) => /*#__PURE__*/_jsxDEV(Visual, {\n          id: i,\n          name: btn.name,\n          content: btn.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","useState","Components","Visual","HierarchyComponent","DragDropContext","Draggable","Droppable","jsxDEV","_jsxDEV","buttons","name","content","getItems","count","Array","from","length","v","k","map","id","reorder","list","startIndex","endIndex","result","removed","splice","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","Creator","constructor","props","onDragEnd","destination","items","state","source","index","setState","handleAddInHierarchy","component","comp","hierarchyComponents","updateComps","setHierarchyComponents","handleRemoveFromHierarchy","filter","bind","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","btn","i","handleAdd","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","item","draggableId","draggableProps","dragHandleProps","placeholder"],"sources":["D:/webdev/website_generator/frontend/src/components/Creator.jsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport Components from \"./Components\";\r\nimport Visual from \"./Visual\";\r\nimport \"./Creator.css\";\r\nimport HierarchyComponent from \"./HierarchyComponent\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst buttons = [\r\n  { name: \"Name1\", content: \"adsdasjdasdkahdjasjdhakdahd\" },\r\n  { name: \"Name2\", content: \"hdfhfghfg\" },\r\n  { name: \"Name3\", content: \"cvxcvxcvxcv\" },\r\n  { name: \"Name4\", content: \"324234235332\" },\r\n  { name: \"Name5\", content: \"oiiewroioweruiow\" },\r\n];\r\n\r\nconst getItems = (count) =>\r\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n    id: `item-${k}`,\r\n    content: `item ${k}`,\r\n  }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250,\r\n});\r\n\r\nclass Creator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: getItems(10),\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items,\r\n    });\r\n  };\r\n\r\n  //[hierarchyComponents, setHierarchyComponents] = useState([]);\r\n\r\n  handleAddInHierarchy = (component) => {\r\n    let comp = {\r\n      id: hierarchyComponents.length,\r\n      name: component.name + hierarchyComponents.length,\r\n      content: component.content,\r\n    };\r\n    const updateComps = [...hierarchyComponents, comp];\r\n    setHierarchyComponents(updateComps);\r\n  };\r\n\r\n  handleRemoveFromHierarchy = (name) => {\r\n    const updateComps = [...hierarchyComponents].filter(\r\n      (comp) => comp.name !== name\r\n    );\r\n    setHierarchyComponents(updateComps);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"components\">\r\n          <h1>Components</h1>\r\n          {buttons.map((btn, i) => (\r\n            <Components\r\n              id={i}\r\n              name={btn.name}\r\n              content={btn.content}\r\n              handleAdd={() => handleAddInHierarchy(btn)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"hierarchy\">\r\n          <h1>Hierarchy</h1>\r\n          {\r\n            /* {hierarchyComponents.map((btn, i) => (\r\n          <HierarchyComponent\r\n            id={i}\r\n            name={btn.name}\r\n            content={btn.content}\r\n            handleDelete={() => handleRemoveFromHierarchy(btn.name)}\r\n          />\r\n        ))} */\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n              <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    style={getListStyle(snapshot.isDraggingOver)}\r\n                  >\r\n                    {this.state.items.map((item, index) => (\r\n                      <Draggable\r\n                        key={item.id}\r\n                        draggableId={item.id}\r\n                        index={index}\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            style={getItemStyle(\r\n                              snapshot.isDragging,\r\n                              provided.draggableProps.style\r\n                            )}\r\n                          >\r\n                            {item.content}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          }\r\n        </div>\r\n        <div className=\"visualisation\">\r\n          <h1>Visual</h1>\r\n          {hierarchyComponents.map((btn, i) => (\r\n            <Visual id={i} name={btn.name} content={btn.content} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}