{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\website_generator\\\\frontend\\\\src\\\\components\\\\formatting_options\\\\TextAlignment.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignLeft, faAlignRight, faAlignCenter } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextAlignment() {\n  _s();\n  const [newAlign, setNewAlign] = useState(alignment);\n  const [isLeft, setLeft] = useState(false);\n  const [isRight, setRight] = useState(false);\n  const [isCenter, setCenter] = useState(true);\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    \"aria-label\": \"Text Alignment\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: isLeft ? \"secondary\" : \"light\",\n      onClick: () => handleTextAlg(0),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAlignLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: isCenter ? \"secondary\" : \"light\",\n      onClick: () => handleTextAlg(1),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAlignCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: isRight ? \"secondary\" : \"light\",\n      onClick: () => handleTextAlg(2),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAlignRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAlignment, \"duOVIhIy7cIR8UpJ822VPiuLKUs=\");\n_c = TextAlignment;\nvar _c;\n$RefreshReg$(_c, \"TextAlignment\");","map":{"version":3,"names":["React","ButtonGroup","FontAwesomeIcon","faAlignLeft","faAlignRight","faAlignCenter","jsxDEV","_jsxDEV","TextAlignment","_s","newAlign","setNewAlign","useState","alignment","isLeft","setLeft","isRight","setRight","isCenter","setCenter","children","Button","variant","onClick","handleTextAlg","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/webdev/website_generator/frontend/src/components/formatting_options/TextAlignment.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAlignLeft,\r\n  faAlignRight,\r\n  faAlignCenter,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function TextAlignment() {\r\n  const [newAlign, setNewAlign] = useState(alignment);\r\n\r\n  const [isLeft, setLeft] = useState(false);\r\n  const [isRight, setRight] = useState(false);\r\n  const [isCenter, setCenter] = useState(true);\r\n  return (\r\n    <ButtonGroup aria-label=\"Text Alignment\">\r\n      <Button\r\n        variant={isLeft ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextAlg(0)}\r\n      >\r\n        <FontAwesomeIcon icon={faAlignLeft} />\r\n      </Button>\r\n      <Button\r\n        variant={isCenter ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextAlg(1)}\r\n      >\r\n        <FontAwesomeIcon icon={faAlignCenter} />\r\n      </Button>\r\n      <Button\r\n        variant={isRight ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextAlg(2)}\r\n      >\r\n        <FontAwesomeIcon icon={faAlignRight} />\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,WAAW,EACXC,YAAY,EACZC,aAAa,QACR,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAACC,SAAS,CAAC;EAEnD,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACI,OAAO,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACM,QAAQ,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,oBACEL,OAAA,CAACN,WAAW;IAAC,cAAW,gBAAgB;IAAAmB,QAAA,gBACtCb,OAAA,CAACc,MAAM;MACLC,OAAO,EAAER,MAAM,GAAG,WAAW,GAAG,OAAQ;MACxCS,OAAO,EAAEA,CAAA,KAAMC,aAAa,CAAC,CAAC,CAAE;MAAAJ,QAAA,eAEhCb,OAAA,CAACL,eAAe;QAACuB,IAAI,EAAEtB;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B,eACTtB,OAAA,CAACc,MAAM;MACLC,OAAO,EAAEJ,QAAQ,GAAG,WAAW,GAAG,OAAQ;MAC1CK,OAAO,EAAEA,CAAA,KAAMC,aAAa,CAAC,CAAC,CAAE;MAAAJ,QAAA,eAEhCb,OAAA,CAACL,eAAe;QAACuB,IAAI,EAAEpB;MAAc;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,eACTtB,OAAA,CAACc,MAAM;MACLC,OAAO,EAAEN,OAAO,GAAG,WAAW,GAAG,OAAQ;MACzCO,OAAO,EAAEA,CAAA,KAAMC,aAAa,CAAC,CAAC,CAAE;MAAAJ,QAAA,eAEhCb,OAAA,CAACL,eAAe;QAACuB,IAAI,EAAErB;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAElB;AAACpB,EAAA,CA5BuBD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}