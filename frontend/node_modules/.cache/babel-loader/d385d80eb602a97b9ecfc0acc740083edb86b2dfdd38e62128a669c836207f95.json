{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\website_generator\\\\frontend\\\\src\\\\components\\\\formatting_options\\\\TextStyle.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextStyle() {\n  _s();\n  const [isBold, setBold] = useState(false);\n  const [isItalic, setItalic] = useState(false);\n  const [newStyle, setNewStyle] = useState(\"\");\n  const handleTextStyle = id => {\n    switch (id) {\n      case 0:\n        addStyle(\"fw-bold \");\n        setBold(!isBold);\n        if (isBold) setNewStyle(\"fw-normal \");\n        break;\n      case 1:\n        setNewStyle(\"fw-normal \");\n        break;\n      case 2:\n        addStyle(\"fst-italic \");\n        setItalic(!isItalic);\n        if (isItalic) setNewStyle(\"fw-normal \");\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    \"aria-label\": \"Text Style\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: isBold ? \"secondary\" : \"light\",\n      onClick: () => handleTextStyle(0),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: isItalic ? \"secondary\" : \"light\",\n      onClick: () => handleTextStyle(2),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faItalic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TextStyle, \"pVihQrkPhCEadv+rhNzPHOQu7K0=\");\n_c = TextStyle;\nvar _c;\n$RefreshReg$(_c, \"TextStyle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TextStyle","_s","isBold","setBold","useState","isItalic","setItalic","newStyle","setNewStyle","handleTextStyle","id","addStyle","ButtonGroup","children","Button","variant","onClick","FontAwesomeIcon","icon","faBold","fileName","_jsxFileName","lineNumber","columnNumber","faItalic","_c","$RefreshReg$"],"sources":["D:/webdev/website_generator/frontend/src/components/formatting_options/TextStyle.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function TextStyle() {\r\n  const [isBold, setBold] = useState(false);\r\n  const [isItalic, setItalic] = useState(false);\r\n  const [newStyle, setNewStyle] = useState(\"\");\r\n\r\n  const handleTextStyle = (id) => {\r\n    switch (id) {\r\n      case 0:\r\n        addStyle(\"fw-bold \");\r\n        setBold(!isBold);\r\n        if (isBold) setNewStyle(\"fw-normal \");\r\n        break;\r\n      case 1:\r\n        setNewStyle(\"fw-normal \");\r\n        break;\r\n      case 2:\r\n        addStyle(\"fst-italic \");\r\n        setItalic(!isItalic);\r\n        if (isItalic) setNewStyle(\"fw-normal \");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup aria-label=\"Text Style\">\r\n      <Button\r\n        variant={isBold ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextStyle(0)}\r\n      >\r\n        <FontAwesomeIcon icon={faBold} />\r\n      </Button>\r\n      <Button\r\n        variant={isItalic ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextStyle(2)}\r\n      >\r\n        <FontAwesomeIcon icon={faItalic} />\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMK,eAAe,GAAIC,EAAE,IAAK;IAC9B,QAAQA,EAAE;MACR,KAAK,CAAC;QACJC,QAAQ,CAAC,UAAU,CAAC;QACpBR,OAAO,CAAC,CAACD,MAAM,CAAC;QAChB,IAAIA,MAAM,EAAEM,WAAW,CAAC,YAAY,CAAC;QACrC;MACF,KAAK,CAAC;QACJA,WAAW,CAAC,YAAY,CAAC;QACzB;MACF,KAAK,CAAC;QACJG,QAAQ,CAAC,aAAa,CAAC;QACvBL,SAAS,CAAC,CAACD,QAAQ,CAAC;QACpB,IAAIA,QAAQ,EAAEG,WAAW,CAAC,YAAY,CAAC;QACvC;MACF;QACE;IAAM;EAEZ,CAAC;EAED,oBACET,OAAA,CAACa,WAAW;IAAC,cAAW,YAAY;IAAAC,QAAA,gBAClCd,OAAA,CAACe,MAAM;MACLC,OAAO,EAAEb,MAAM,GAAG,WAAW,GAAG,OAAQ;MACxCc,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAAC,CAAC,CAAE;MAAAI,QAAA,eAElCd,OAAA,CAACkB,eAAe;QAACC,IAAI,EAAEC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACTxB,OAAA,CAACe,MAAM;MACLC,OAAO,EAAEV,QAAQ,GAAG,WAAW,GAAG,OAAQ;MAC1CW,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAAC,CAAC,CAAE;MAAAI,QAAA,eAElCd,OAAA,CAACkB,eAAe;QAACC,IAAI,EAAEM;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAElB;AAACtB,EAAA,CAzCuBD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}