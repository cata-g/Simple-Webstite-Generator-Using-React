{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\website_generator\\\\frontend\\\\src\\\\components\\\\formatting_options\\\\TextStyle.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faItalic, faBold } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextStyle(_ref) {\n  let {\n    newStyle,\n    setNewStyle\n  } = _ref;\n  const addStyle = style => {\n    let actualStyle = newStyle;\n    actualStyle += style;\n    setNewStyle(actualStyle);\n  };\n  const handleTextStyle = id => {\n    switch (id) {\n      case 0:\n        addStyle(\"fw-bold \");\n        setBold(!isBold);\n        if (isBold) setNewStyle(\"fw-normal \");\n        break;\n      case 1:\n        setNewStyle(\"fw-normal \");\n        break;\n      case 2:\n        addStyle(\"fst-italic \");\n        setItalic(!isItalic);\n        if (isItalic) setNewStyle(\"fw-normal \");\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    \"aria-label\": \"Text Style\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: isBold ? \"secondary\" : \"light\",\n      onClick: () => handleTextStyle(0),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: isItalic ? \"secondary\" : \"light\",\n      onClick: () => handleTextStyle(2),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faItalic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = TextStyle;\nvar _c;\n$RefreshReg$(_c, \"TextStyle\");","map":{"version":3,"names":["React","useState","Button","ButtonGroup","FontAwesomeIcon","faItalic","faBold","jsxDEV","_jsxDEV","TextStyle","_ref","newStyle","setNewStyle","addStyle","style","actualStyle","handleTextStyle","id","setBold","isBold","setItalic","isItalic","children","variant","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/webdev/website_generator/frontend/src/components/formatting_options/TextStyle.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faItalic, faBold } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function TextStyle({ newStyle, setNewStyle }) {\r\n  const addStyle = (style) => {\r\n    let actualStyle = newStyle;\r\n    actualStyle += style;\r\n    setNewStyle(actualStyle);\r\n  };\r\n\r\n  const handleTextStyle = (id) => {\r\n    switch (id) {\r\n      case 0:\r\n        addStyle(\"fw-bold \");\r\n        setBold(!isBold);\r\n        if (isBold) setNewStyle(\"fw-normal \");\r\n        break;\r\n      case 1:\r\n        setNewStyle(\"fw-normal \");\r\n        break;\r\n      case 2:\r\n        addStyle(\"fst-italic \");\r\n        setItalic(!isItalic);\r\n        if (isItalic) setNewStyle(\"fw-normal \");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup aria-label=\"Text Style\">\r\n      <Button\r\n        variant={isBold ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextStyle(0)}\r\n      >\r\n        <FontAwesomeIcon icon={faBold} />\r\n      </Button>\r\n      <Button\r\n        variant={isItalic ? \"secondary\" : \"light\"}\r\n        onClick={() => handleTextStyle(2)}\r\n      >\r\n        <FontAwesomeIcon icon={faItalic} />\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,iCAAiC;AACzD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,eAAe,SAASC,SAASA,CAAAC,IAAA,EAA4B;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACzD,MAAMG,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAIC,WAAW,GAAGJ,QAAQ;IAC1BI,WAAW,IAAID,KAAK;IACpBF,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMC,eAAe,GAAIC,EAAE,IAAK;IAC9B,QAAQA,EAAE;MACR,KAAK,CAAC;QACJJ,QAAQ,CAAC,UAAU,CAAC;QACpBK,OAAO,CAAC,CAACC,MAAM,CAAC;QAChB,IAAIA,MAAM,EAAEP,WAAW,CAAC,YAAY,CAAC;QACrC;MACF,KAAK,CAAC;QACJA,WAAW,CAAC,YAAY,CAAC;QACzB;MACF,KAAK,CAAC;QACJC,QAAQ,CAAC,aAAa,CAAC;QACvBO,SAAS,CAAC,CAACC,QAAQ,CAAC;QACpB,IAAIA,QAAQ,EAAET,WAAW,CAAC,YAAY,CAAC;QACvC;MACF;QACE;IAAM;EAEZ,CAAC;EAED,oBACEJ,OAAA,CAACL,WAAW;IAAC,cAAW,YAAY;IAAAmB,QAAA,gBAClCd,OAAA,CAACN,MAAM;MACLqB,OAAO,EAAEJ,MAAM,GAAG,WAAW,GAAG,OAAQ;MACxCK,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,CAAC,CAAE;MAAAM,QAAA,eAElCd,OAAA,CAACJ,eAAe;QAACqB,IAAI,EAAEnB;MAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACTrB,OAAA,CAACN,MAAM;MACLqB,OAAO,EAAEF,QAAQ,GAAG,WAAW,GAAG,OAAQ;MAC1CG,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,CAAC,CAAE;MAAAM,QAAA,eAElCd,OAAA,CAACJ,eAAe;QAACqB,IAAI,EAAEpB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAElB;AAACC,EAAA,GA3CuBrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}